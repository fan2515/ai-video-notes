spring.application.name=ai-video-notes

# ===================================================================
# Application Configuration
# ===================================================================
server.port=8080

# ===================================================================
# Database Configuration (V1.3 - PostgreSQL)
# ===================================================================

# --- PostgreSQL DataSource ---
spring.datasource.url=jdbc:postgresql://localhost:5432/ai_video_notes_db
spring.datasource.username=postgres
spring.datasource.password=123456 # ???????? PostgreSQL ??
spring.datasource.driver-class-name=org.postgresql.Driver

# --- JPA / Hibernate Configuration ---
# 'update' ?? Hibernate ??????????? @Entity ????????????
# ?????????
spring.jpa.hibernate.ddl-auto=update

# (???????????) ??????? Hibernate ??? SQL ??
spring.jpa.show-sql=true

# ???? Hibernate ?????? PostgreSQL ???????????? SQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ===================================================================
# External API Configuration
# ===================================================================
# 你的Google Gemini API Key，用于免费服务
app.api.gemini.key=${GEMINI_API_KEY}

# 1. 用于【生成内容】的 API URL (Flash 版本，速度快)
app.api.gemini.url.flash=https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent

# 2. 用于【生成内容】的 API URL (Pro 版本，质量高)
app.api.gemini.url.pro=https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent

# 3. 【必需】用于【上传文件】的 API URL
#app.api.gemini.file-upload-url=https://generativelanguage.googleapis.com/v1beta/files



# ===================================================================
# Jasypt Encryption Configuration
# ===================================================================
# 用于加密/解密用户API Key的密码，设置一个你自己的复杂密码
#jasypt.encryptor.password=${JASYPT_ENCRYPTOR_PASSWORD}
asypt.encryptor.password=true

# ===================================================================
# Spring Boot Actuator (可选，但推荐，用于健康检查)
# ===================================================================
management.endpoints.web.exposure.include=health,info

# ===================================================================
# Spring Threads Configuration
# ===================================================================
# 开启虚拟线程，发挥Java 21的威力！
spring.threads.virtual.enabled=true

#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console


